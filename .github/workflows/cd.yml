name: CD

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Install dependencies
      run: |
        go mod download
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Generate protobuf files
      run: |
        export PATH="$PATH:$(go env GOPATH)/bin"
        ./scripts/generate-proto.sh

    - name: Build binaries
      run: |
        make build

    - name: Run tests
      run: |
        make test

    - name: Create release artifacts
      run: |
        mkdir -p release
        tar -czf release/distkv-linux-amd64.tar.gz -C build distkv-server distkv-client

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: release/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release/*.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-publish:
    name: Docker Publish
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/distkv
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-publish
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

    - name: Update image tag
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        sed -i "s|image: distkv:latest|image: ${{ secrets.DOCKER_USERNAME }}/distkv:${TAG}|g" deploy/k8s/distkv-cluster.yaml

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deploy/k8s/distkv-cluster.yaml
        kubectl rollout status statefulset/distkv -n distkv --timeout=5m

    - name: Verify deployment
      run: |
        kubectl get pods -n distkv
        kubectl get services -n distkv